<snippet>
  <content><![CDATA[

{% set tags = craft.tags.first() %}
{% set tags = craft.tags.ids() %}
{% set tags = craft.tags.total() %}

{% set tags = craft.tags.find({
  id:             id OR 'not id' ,
  name:           'name', 
  offset:         number,
  set:            'setHandle',
  setId:          id,
  
  childOf:        See supported syntaxes below,
  childField:     'fieldHandle' OR id,
  parentOf:       See supported syntaxes below,
  parentField:    'fieldHandle' OR id,

  order:          'id,setId,name asc',
  limit:          number,
  indexBy:        'id,name',

  search:         'salty dog'           containing both "salty" and "dog"
                  '"salty dog"'         containing the exact phrase "salty dog"
                  'salty OR dog'        containing either "salty" or "dog" (or both)
                  'salty -dog'          containing "salty" but not "dog"
                  'body:salty'          containing "salty" in the "body" field
                  'body:salty'          body:dog containing both "salty" and "dog" 
                                        in the "body" field
                  'body:*'              containing anything within the "body" field
                  'salty locale:en_us'  containing "salty" in the locale "en_us"
                  'salt*'               containing a word that begins with "salt"
                  '*ty'                 containing a word that ends with "ty"
                  '*alt*'               containing a word that contains "alt"

  Supported syntaxes for childOf, kind, parentOf
                  elementId
                  AssetFileModel, EntryModel, UserModel, or TagModel
                  [ arrayOfModels, arrayOfModels, arrayOfModels ]
                  [ 1, 2, 3 ]
                  craft.assets, craft.entries, craft.users, craft.tags

}) %}

{% for tag in tags %}

  {{ tag.id }}
  {{ tag.name }}
  {{ tag.setId }}
  
  {{ tag.getChildren( fields ) }}
  {{ tag.getParents( fields ) }}

  {% set prev = tag.getPrev( params ) %}
  {% set next = tag.getNext( params ) %}
  {% if prev %} <a href="/link-to-prev-tag">{{ prev.name }}</a> {% endif %}
  {% if next %} <a href="/link-to-next-tag">{{ next.name }}</a> {% endif %}

{% endfor %}}
$0
]]></content>
  <tabTrigger>info</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <scope>text.html.twig</scope>
</snippet>
