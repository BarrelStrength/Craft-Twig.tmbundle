<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>content</key>
	<string>
{% set entries = craft.entries.first() %}
{% set entries = craft.entries.last() %}
{% set entries = craft.entries.nth( n ) %}
{% set entries = craft.entries.ids() %}
{% set entries = craft.entries.total() %}

{% set entries = craft.entries.find({
  id:             id OR 'not id' ,
  fixedOrder:     true/false,
  slug:           'slug', 
  uri:            'uri', 
  sectionId:      id,
  section:        'sectionHandle', [arrayOfSectionHandles], SectionModel
  authorId:       id,
  authorGroupId:  id,
  authorGroup:    id,
  postDate:       'YYYY,YYYY-MM,YYYY-MM-DD,YYYY-MM-DD HH:MM,YYYY-MM-DD HH:MM:SS',
  after:          'YYYY,YYYY-MM,YYYY-MM-DD,YYYY-MM-DD HH:MM,YYYY-MM-DD HH:MM:SS',
  before:         'Unix timestamp,DateTime variable',
  status:         'live,pending,expired,disabled,null',
  type:           'entryTypeHandle',
  archived:       true OR false,
  offset:         10,
  level:          2,
  locale:         'en_us',
  localeEnabled:  true/false,

  relatedTo:      element, sourceElement, targetElement, field, sourceLocale,
  ancestorOf:     EntryModel OR id,
  ancestorDist:   2,
  descendantOf:   EntryModel OR id,
  descendantDist: 2,
  nextSiblingOf:  EntryModel OR id,
  prevSiblingOf:  EntryModel OR id,
  
  order:          'title,id,authorId,sectionId,slug,uri,postDate,expiryDate',
                  'dateCreated asc', 'dateUpdated desc'
  limit:          10,
  indexBy:        'id,title',

  search:         'salty dog'           containing both "salty" and "dog"
                  '"salty dog"'         containing the exact phrase "salty dog"
                  'salty OR dog'        containing either "salty" or "dog" (or both)
                  'salty -dog'          containing "salty" but not "dog"
                  'body:salty'          containing "salty" in the "body" field
                  'body:salty'          body:dog containing both "salty" and "dog" 
                                        in the "body" field
                  'body:*'              containing anything within the "body" field
                  'salty locale:en_us'  containing "salty" in the locale "en_us"
                  'salt*'               containing a word that begins with "salt"
                  '*ty'                 containing a word that ends with "ty"
                  '*alt*'               containing a word that contains "alt"

  Supported syntaxes for childOf, kind, parentOf
                  elementId
                  AssetFileModel, EntryModel, UserModel, or TagModel
                  [ arrayOfModels, arrayOfModels, arrayOfModels ]
                  [ 1, 2, 3 ]
                  craft.assets, craft.entries, craft.users, craft.tags

}) %}

{% for entry in entries %}

  {{ entry.id }}
  {{ entry.level }}
  {{ entry.sectionId }}
  {{ entry.section }}   {# array #}
  {{ entry.authorId }}
  {{ entry.author }}    {# array #}
  {{ entry.locale }}
  {{ entry.type }}
  {{ entry.title }}
  {{ entry.slug }}
  {{ entry.uri }}
  {{ entry.url }}       {# full front-end URL #}
  {{ entry.link }}      {# full &lt;a&gt; tag #}
  {{ entry.cpEditUrl }}
  
  {{ entry.enabled }}
  {{ entry.status }}

  {{ entry.postDate }}
  {{ entry.expiryDate }}
  {{ entry.dateCreated }}
  {{ entry.dateUpdated }}
  
  {{ entry.getAncestors( distance ) }}
  {{ entry.getDescendants( distance) }}
  {{ entry.children }}
	{{ entry.parent }}
  {{ entry.hasDescendants }}
  {{ entry.nextSibling }}
  {{ entry.prevSibling }}
  {{ entry.isAncestorOf( entry ) }}
  {{ entry.isChildOf( entry ) }}
  {{ entry.isDescendantOf( entry ) }}
  {{ entry.isNextSiblingOf( entry ) }}
  {{ entry.isParentOf( entry ) }}
  {{ entry.isPrevSiblingOf( entry ) }}
  {{ entry.isSiblingOf( entry ) }}
  
  {% set prev = entry.getPrev( params ) %}
  {% set next = entry.getNext( params ) %}
  {% if prev %} &lt;a href="{{ prev.url }}"&gt;{{ prev.title }}&lt;/a&gt; {% endif %}
  {% if next %} &lt;a href="{{ next.url }}"&gt;{{ next.title }}&lt;/a&gt; {% endif %}

{% endfor %}}
$0</string>
	<key>name</key>
	<string>info: craft.entries</string>
	<key>scope</key>
	<string>text.html.twig</string>
	<key>tabTrigger</key>
	<string>info</string>
	<key>uuid</key>
	<string>CBEE6EB1-CB43-4C0F-AEA7-645446A1713F</string>
</dict>
</plist>
